{"version":3,"sources":["components/header/header.jsx","components/home/item.jsx","components/home/home.jsx","components/footer/footer.jsx","components/detail/detail.jsx","components/AddBlog/newBlog.jsx","components/App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["Header","className","Navbar","color","light","fixed","expand","href","to","Nav","navbar","NavItem","Component","Item","props","element","desc","description","length","substring","title","header","dispatch","useDispatch","history","useHistory","Col","xs","sm","md","lg","Card","onClick","type","data","push","value","id","name","CardImg","top","width","src","image","alt","CardBody","CardTitle","CardSubtitle","author","toUpperCase","CardText","Button","Home","console","log","list","state","window","scrollTo","data_1","response","this","statedata","axios","get","headers","then","res","map","ListGroupItem","setState","addData","Container","Row","ListGroup","connect","addSelected","Footer","Detail","blog","useSelector","selected","Object","keys","Blog","Form","onSubmit","evt","preventDefault","target","img","form_data","FormData","content","append","post","method","accept","catch","err","FormGroup","Label","Input","required","aria-rowcount","onChange","e","files","App","exact","path","component","Boolean","location","hostname","match","initialState","username","Reducer","action","assign","store","createStore","reducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b73c61be.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, NavbarToggler, NavItem, Collapse } from 'reactstrap';\nimport './header.css';\n\nexport default class Header extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         isOpen: false\n    //     }\n    // }\n\n    // toggle(){\n    //     this.setState({\n    //         isOpen: !this.state.isOpen\n    //     })\n    // }\n\n    render(){\n        return (\n            <div className='mb-50'>\n                <Navbar color='faded' light fixed='top' expand='md'>\n                    <Link href='/' to='/'>Afaq Blogs</Link>\n                    {/* <NavbarToggler onClick={this.toggle}/>\n                    <Collapse isOpen={this.state.isOpen} navbar> */}\n                    <Nav className='ml-auto' navbar>\n                        <NavItem>\n                            <Link to='/'>Home</Link> \n                        </NavItem>\n                        <NavItem>\n                            <Link href='/add' to='/add'>Add Blog</Link>\n                        </NavItem>\n                        <NavItem>\n                            <Link href='/detail' to='/detail'>About</Link>\n                        </NavItem>\n\n                    </Nav>\n                    {/* </Collapse> */}\n                </Navbar>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport {Col, Card, CardImg, CardSubtitle, CardText, \n    CardTitle, CardBody, Button} from 'reactstrap';\nimport {Link, useHistory} from 'react-router-dom';\nimport {useDispatch} from 'react-redux';\nimport './home.css';\n\nexport default function Item(props){\n    let element = props.element;\n    let desc = element.description;\n    if(desc.length > 45) {\n        desc = desc.substring(0, 45);\n        desc = desc + '...';\n    }\n    let title = element.header;\n    if(title.length>12){\n        title = title.substring(0,12)\n        title = title + '...'\n    }\n\n    let dispatch = useDispatch();\n    let history = useHistory();\n\n    const handleClick = ()=>{\n        dispatch({type:'AddS', data:element});\n        history.push('detail/');\n    }\n    \n    return (\n        <Col xs='12' sm='6' md='6' lg='4' className='blog'>\n        <Card className='card' onClick={handleClick}>\n            <input type='hidden' value={element.id} name='id' />\n            <CardImg top width='100%' src={element.image} alt='Blog image'/>\n            <CardBody>\n                <CardTitle><h3>{title}</h3></CardTitle>\n                <CardSubtitle><small>Written By {element.author.toUpperCase()} </small>\n                </CardSubtitle>\n                <CardText>{desc}</CardText>\n                <Link to='/add'>\n                    <Button>View</Button>\n                </Link>\n            </CardBody>\n        </Card>\n        </Col>\n    );\n}","import React, { Component } from 'react';\nimport { Container, Row,\n          Col, ListGroup, ListGroupItem \n        } from 'reactstrap';\nimport './home.css';\nimport axios from 'axios';\nimport {connect} from 'react-redux';\nimport Item from './item';\n\n\nclass Home extends Component {\n    constructor(props){\n        super(props);\n\n        console.log(props.data, props.list);\n        this.state = {\n            data: [],\n            list: []\n        }\n    }\n    \n    // detail(element){\n    //     console.log(this.props);\n    //     this.props.addSelected(element);\n    // }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n        let data_1, response=[];\n        console.log(this.statedata);\n        axios.get(`blog/`, {\n            headers: {\n                'Authorization': `token f5a254322465b9b5915f73bb34ff802a3f98f963`,\n            },\n            })\n            .then(res => {\n                data_1 = res.data.map((element)=>{\n                    response.push(<ListGroupItem >\n                                     <div className='img-div'>\n                                     <img top='true' src={element.image} width='100%' alt='Blog img'/>\n                                     </div>\n                                     <h2 className='hist'>{element.header}</h2>\n                                 </ListGroupItem>)\n\n                    return (\n                        <Item element={element} />\n                    );\n            });\n            }).then(()=>{\n                this.setState({\n                    data: data_1,\n                    list: response\n                });\n                this.props.addData(data_1);\n            })\n    }\n    \n    render() {\n        return (<div>\n                <Container className='.container'>\n                    <Row>\n                        <Col xs='12' sm='8' md='9' lg='9'>\n                        <Row>\n                            {this.state.data}\n                        </Row>\n                        </Col>\n                        <Col>\n                            <ListGroup className='list_group'>\n                                <h3 className='text-center'>History</h3>\n                                {this.state.list}\n                            </ListGroup>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>);\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return {\n        statedata: state.data,\n        list: state.list\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addSelected: (data) =>{dispatch({type:'AddS', data: data})},\n        addData: (data) => {dispatch({type:'Data', data:data})}\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Home)","import React, { Component } from 'react';\nimport './footer.css';\n\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div>\n                <footer>\n                    <div className='container'>\n                        <p className='text-center'>\n                            Copyright @2020 | Designed By AFAQ\n                        </p>\n                    </div>\n                </footer>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport { Button } from 'reactstrap';\n\n\nexport default function Detail() {\n\n    let blog = useSelector(state=>state.selected);\n    console.log(blog);\n    return (Object.keys(blog).length>0) ? (<div className='detail'>\n                <h1>{blog.header}</h1>\n                <h6>Written By {blog.author.toUpperCase()}</h6>\n                <h3>Content:</h3>\n                <p className=''>{blog.description}</p>\n                {/* <Button className=''>Edit</Button> */}\n            </div>):\n                (<div></div>);\n}\n","import React from 'react';\nimport { Form, FormGroup, Input, Button, Label } from 'reactstrap';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom'\n\n\nexport default function Blog() {\n\n    let image;\n    const handleImageChange = (e) => {\n          image= e.target.files[0]\n      };\n    let history = useHistory(); \n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        console.log(evt.target.img);\n        let form_data = new FormData();\n        // form_data.append('header', .image, this.state.image.name);\n        let data = {'header': evt.target.name.value,\n                    'description': evt.target.content.value,\n                    'image': evt.target.img.value}\n        form_data.append('header', evt.target.name.value);\n        form_data.append('description', evt.target.content.value);\n        form_data.append('image', image, image.name);\n        console.log(form_data);\n        let url = 'blog/';\n        axios.post(`blog/`, form_data, { \n            method: 'POST',\n            headers: {\n                'content-type': 'multipart/form-data',\n                accept: 'application/json',\n                'Authorization': `token d0a161f7b30d204f79a2d749bc0668b81eb98be2`,\n            }\n            }).then(res => {\n                console.log(res.data);\n                history.push('/')\n            })\n            .catch(err => console.log(err))\n    }\n\n    return (<div>\n        <h2 className='text-center'>ADD NEW BLOG</h2>\n        <Form className='blog-form' onSubmit={handleSubmit}>\n            <FormGroup>\n                <Label>Blog Name</Label>\n                <Input name='name' type='text' required/>\n            </FormGroup>\n            <FormGroup>\n                <Label>Blog Content</Label>\n                <Input name='content' type='textarea' aria-rowcount='40' required/>\n            </FormGroup>\n            <FormGroup>\n                <Label>Blog Image</Label>\n                <Input name='img' type='file' accept='image/png, image.jpeg' \n                onChange={handleImageChange}/>\n            </FormGroup>\n            <Button className='btn-lg btn-dark' type='submit'>Add Blog</Button>\n        </Form>\n    </div>);\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport NavBar from './header/header.jsx';\nimport Home from './home/home';\nimport Footer from './footer/footer'\nimport Detail from './detail/detail.jsx';\nimport Blog from './AddBlog/newBlog';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n          <NavBar />\n          <Route exact path='/' component={Home} />\n          <Route path='/detail' component={Detail} />\n          <Route path='/add' component={Blog} />\n          <Footer />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\n\nconst initialState = {\n    data: ['new'],\n    list: ['list'],\n    selected: {},\n    username: null\n}\n\nfunction Reducer(state=initialState, action){\n    if(action.type === 'Data'){\n        console.log(action.data);\n        return Object.assign({}, state, {\n            data: action.data\n        });\n    }\n    else if(action.type === 'AddS'){\n        // console.log(action.data);\n        return Object.assign({}, state,{\n            selected: action.data\n        })\n    }\n    else{\n        return Object.assign({}, state);\n    }\n}\n\nexport default Reducer;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n      <div className='app'>\n        <App />\n      </div>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}